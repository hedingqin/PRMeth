}
## Initialization of the reference matrix (W2)
## Y: the methylation profiles of tumor samples
## K: the number of clusters
## dist.method: the distance formula
## output: the initialized methylation profiles (W2) of cell types
RefFreeCellMixInitialize <- function(Y,K=2,dist.method = "binary", ...){
if(!is.matrix(Y) | !is.numeric(Y)){
stop("Y is not a numeric matrix\n")
}
n <- dim(Y)[2]
if(n < K){
stop("Can't initialize because K is too big\n")
}
Y.Distance <- dist(t(Y), method = dist.method)
Y.Cluster <- hclust(Y.Distance, ...)
classes <- cutree(Y.Cluster, K)
s <- split(1:n,classes)
W0 = sapply(s, function(u) apply(Y[,u,drop=FALSE],1,mean,na.rm=TRUE))
return(W0)
}
out <- prmeth(Y = Y, W1 = W1, K = 7, iters = 1000,rssDiffStop = 1e-10)
library(quadprog)
out <- prmeth(Y = Y, W1 = W1, K = 7, iters = 1000,rssDiffStop = 1e-10)
View(out)
out[["H"]]
out$H
dim(out$H)
dim(out$W)
out$bic
library(EpiDISH)
install.packages(EpiDISH)
install.packages("EpiDISH")
library(EpiDISH)
library("EpiDISH")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/H_test.RData")
View(H_test)
mean(rowSums(t(H_test)-out$H)/30)
mean(rowSums(abs(t(H_test)-out$H))/30)
install.packages(quadprog)
getWinProgressBar()
getwd()
load("./data/Y_test.Rdata")
load("./data/W1_test.Rdata")
load("./data/W_test.Rdata")
load("./data/H_test.Rdata")
View(W_test)
ncol(W)
ncol(W_test)
boxplot(out$H)
dim(out$H)
dim(t(out$H))
boxplot(t(out$H))
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1,15)
library(matrixStats)
library(quadprog)
optimalK <- getCellTypeNumber(Y,W1,15)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1,5)
View(optimalK)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1,0.2,0.3,0.4)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1,6)
View(optimalK)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1,10)
View(optimalK)
optimalK[["lambda_bic"]]
plot(5:10,optimalK$lambda_bic, col="red",xlab="Number of total cell types",
ylab = "AIC",lwd = 1,type = 'b',main = "AIC")
abline(v = 6,lwd = 2,lty = 2,col = "gray")
abline(v = 5,lwd = 2,lty = 2,col = "gray")
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
cat(minbic)
cat("\n")
cat(row)
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1,10)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
for(lambda in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)){
row = c()
lambda_bic = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
cat(minbic)
cat("\n")
cat(row)
cat("\n")
cat(minbic_index)
cat("\n")
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1,10)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
lambda_bic = c()
for(lambda in c(0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)){
row = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
cat(minbic)
cat("\n")
cat(row)
cat("\n")
cat(minbic_index)
cat("\n")
cat(optimal_K)
cat("\n")
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1,10)
View(optimalK)
optimalK[["lambda_bic"]]
plot(5:10,optimalK$lambda_bic, col="red",xlab="Number of total cell types",
ylab = "AIC",lwd = 1,type = 'b',main = "AIC")
abline(v = 10,lwd = 2,lty = 2,col = "gray")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/Yexample.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/nu0example.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/muexample.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/mixexample.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/etaexample.RData")
View(Y)
View(mu)
Y <- Y
W1 <- mu
#select feature
feat <- select_feature(Y,1,500)
Y <- Y[feat,]
W1 <- W1[feat,]
optimalK <- getCellTypeNumber(Y,W1[,1:4],10)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
minbic_index = 0
optimal_K = 0
lambda_bic = c()
for(lambda in c(0.4)){
row = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = lambda*10
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
cat(minbic)
cat("\n")
cat(row)
cat("\n")
cat(minbic_index)
cat("\n")
cat(optimal_K)
cat("\n")
lambda_bic = rbind(lambda_bic,row)
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = minbic_index/10 )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1[,1:4],10)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
lambda_bic = c()
i = 1
for(lambda in c(0.4)){
row = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = i
optimal_lambda = lambda
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
i = i + 1
}
result = list(lambda_bic=lambda_bic[i,],optimal_K = optimal_K,lambda = optimal_lambda )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1[,1:4],10)
getCellTypeNumber <- function(Y,W1,maxK){
minbic = 1
lambda_bic = c()
i = 1
for(lambda in c(0.4)){
row = c()
for(K in c((ncol(W1)+1):maxK)){
cat("Running lambda_bic\n")
PRMethout <- prmeth(Y = Y,W1 = W1,K = K,iters = 1000,rssDiffStop=1e-10,lambda = lambda)
if(PRMethout$bic < minbic){
minbic = PRMethout$bic
minbic_index = i
optimal_lambda = lambda
optimal_K = K
}
row = cbind(row,PRMethout$bic)
}
lambda_bic = rbind(lambda_bic,row)
i = i + 1
}
result = list(lambda_bic=lambda_bic[minbic_index,],optimal_K = optimal_K,lambda = optimal_lambda )
names(result) = c("lambda_bic","optimal_K","lambda")
return(result)
}
optimalK <- getCellTypeNumber(Y,W1[,1:4],10)
plot(5:10,optimalK$lambda_bic, col="red",xlab="Number of total cell types",
ylab = "λ_BIC",lwd = 1,type = 'b',main = "λ_BIC")
abline(v = 7,lwd = 2,lty = 2,col = "gray")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/Yexample.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/nu0example.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/muexample.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/mixexample.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/newdata/etaexample.RData")
Y_test = Y
W_test = mu
H_test = rho.true
getwd
getwd()
save(Y_test,file = "./data/Y_test.RData")
save(W_test,file = "./data/W_test.RData")
save(H_test,file = "./data/H_test.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/Y_test.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/W_test.RData")
load("E:/myDocument/PostgraduateStudy/Rcode/MethyExperiment/PRMeth/data/H_test.RData")
load("./data/Y_test.Rdata")
load("./data/W_test.Rdata")
load("./data/H_test.Rdata")
Y <- Y_test
W <- W_test
#select feature
feat <- select_feature(Y,1,500)
Y <- Y[feat,]
W1 <- W[feat,1:4]
optimalK <- getCellTypeNumber(Y,W1,10)
optimalK$optimal_K
plot(5:10,optimalK$lambda_bic, col="red",xlab="Number of total cell types",
ylab = "λ_BIC",lwd = 1,type = 'b',main = "λ_BIC")
abline(v = 7,lwd = 2,lty = 2,col = "gray")
optimalK$optimal_K
optimalK$lambda
out <- prmeth(Y = Y, W1 = W1, K = optimalK$optimal_K, iters = 1000,rssDiffStop = 1e-10)
out$H
head(out$H)
head(out$H)
dim(out$H)
dim(out$W)
MAE <- mean(rowSums(abs(t(H_test)-out$H))/100)
MAE
boxplot(t(out$H))
plot(W,out$W,xlab = "True expression profile",pch = 19,col="#00000050",ylab = "Predicted expression profile")
par(mar = c(3.5, 3, 1.6, 1.1), mgp = c(1.9, 0.5, 0),mfrow = c(2,2))
plot(W,out$W,xlab = "True expression profile",pch = 19,col="#00000050",ylab = "Predicted expression profile")
dim(out$W)
plot(W[feat,],out$W,xlab = "True expression profile",pch = 19,col="#00000050",ylab = "Predicted expression profile")
dim(out$H)
dim(H)
dim(H_test)
plot(t(H_test),out$H,xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CALU6")
plot(t(H_test)[,1],out$H[,1],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CALU6")
plot(t(H_test)[,1],out$H[,1],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion")
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion")
out$H
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
View(W_test)
plot(W[feat,5],out$W[,5],xlab = "True expression profile",pch = 19,col="#00000050",ylab = "Predicted expression profile",main = "NK")
par(mar = c(3.5, 3, 1.6, 1.1), mgp = c(1.9, 0.5, 0),mfrow = c(2,2))
plot(W[feat,5],out$W[,5],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
par(mar = c(3.5, 3), mgp = c(1.9, 0.5, 0),mfrow = c(2,2))
par(mar = c(3.5, 3, 1.6, 1.1), mgp = c(1.9, 0.5, 0),mfrow = c(1,2))
plot(W[feat,5],out$W[,5],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
par(mar = c(1, 1, 1.6, 1.1), mgp = c(1.9, 0.5, 0),mfrow = c(1,2))
plot(W[feat,5],out$W[,5],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
par(mar = c(3.5, 3, 1.6, 1.1), mgp = c(0.5, 0.5, 0),mfrow = c(1,2))
plot(W[feat,5],out$W[,5],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
par(mar = c(3.5, 3, 1.6, 1.1), mgp = c(1.9, 0.5, 0),mfrow = c(1,2))
plot(W[feat,5],out$W[,5],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(W[feat,6],out$W[,6],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(W[feat,7],out$W[,7],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(W[feat,5],out$W[,5],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK")
plot(t(H_test)[1,],out$H[1,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(t(H_test)[2,],out$H[2,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(t(H_test)[3,],out$H[3,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(t(H_test)[4,],out$H[4,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(t(H_test)[5,],out$H[5,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(t(H_test)[6,],out$H[6,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(t(H_test)[7,],out$H[7,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
plot(t(H_test)[4,],out$H[4,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "CD4 T")
View(H_test)
par(mar = c(3.5, 3, 1.6, 1.1), mgp = c(1.9, 0.5, 0),mfrow = c(1,2))
plot(t(H_test)[4,],out$H[4,],xlab = "True proportion",pch = 3,col="red",ylab = "Predicted proportion",main = "B cell")
plot(W[feat,5],out$W[,5],xlab = "True methylation profile",pch = 19,col="#00000050",ylab = "Predicted methylation profile",main = "NK cell")
head(out$W)
head(out$W)
head(out$H)
